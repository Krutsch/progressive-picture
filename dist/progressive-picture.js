const n=new WeakSet,i=new IntersectionObserver(a=>{for(const r of a)if(r.intersectionRatio>0&&!n.has(r.target)){const e=r.target.querySelectorAll("source"),o=r.target.querySelector("img");if(!o)break;l(e,"srcset",o).then(t=>{if(t){n.add(r.target);return}l([o],"src",o).then(c=>c&&n.add(r.target))})}},{rootMargin:"0px",threshold:.5});function u(a){return a.splitText!==void 0}const b=new MutationObserver(a=>{for(const r of a){for(const e of r.addedNodes){if(u(e))break;const o=e.querySelectorAll("*");o.forEach(t=>{t instanceof HTMLPictureElement&&i.observe(t)})}for(const e of r.removedNodes){if(u(e))break;const o=e.querySelectorAll("*");o.forEach(t=>{t instanceof HTMLPictureElement&&(i.unobserve(t),n.delete(t))})}}}).observe(document.body,{childList:!0,subtree:!0}),m=document.querySelectorAll("picture");for(const a of m)i.observe(a);async function l(a,r,e){var o;for(const t of a){e.currentSrc||await{then:s=>e.onload=()=>s(e)};const c=e.currentSrc.split("/").slice(-1)[0],d=(o=t.getAttribute(r))==null?void 0:o.split("/").slice(-1)[0];if(t.dataset.src&&c===d){if(t.dataset.src.includes(", "))t.setAttribute(r,t.dataset.src);else{const s=new Image;s.setAttribute(r,t.dataset.src),await{then:f=>s.onload=()=>f(s)},t.setAttribute(r,s.getAttribute(r))}return e.removeAttribute("data-src"),t.removeAttribute("data-src"),a.forEach(s=>{s.dataset.src&&(s.setAttribute(r,s.dataset.src),s.removeAttribute("data-src"))}),e.classList.add("img-progressive"),e.dataset.alt&&(e.setAttribute("alt",e.dataset.alt),e.removeAttribute("data-alt")),!0}}}

const g=new WeakSet(),h=new IntersectionObserver(e=>{for(const c of e)if(c.intersectionRatio>0&&!g.has(c.target)){const a=c.target.querySelectorAll("source"),f=c.target.querySelector("img");if(!f)break;k(a,"srcset",f).then(b=>{if(b){g.add(c.target);return}k([f],"src",f).then(i=>i&&g.add(c.target))})}},{rootMargin:"0px",threshold:.5});function j(e){return e.splitText!==void 0}const o=new MutationObserver(e=>{for(const c of e){for(const a of c.addedNodes){if(j(a))break;const f=a.querySelectorAll("*");f.forEach(b=>{b instanceof HTMLPictureElement&&h.observe(b)})}for(const a of c.removedNodes){if(j(a))break;const f=a.querySelectorAll("*");f.forEach(b=>{b instanceof HTMLPictureElement&&(h.unobserve(b),g.delete(b))})}}}).observe(document.body,{childList:!0,subtree:!0}),l=document.querySelectorAll("picture");for(const e of l)h.observe(e);async function k(e,c,a){var f;for(const b of e){a.currentSrc||await{then:d=>a.onload=()=>d(a)};const i=a.currentSrc.split("/").slice(-1)[0],m=(f=b.getAttribute(c))==null?void 0:f.split("/").slice(-1)[0];if(b.dataset.src&&i===m){if(b.dataset.src.includes(", "))b.setAttribute(c,b.dataset.src);else{const d=new Image();d.setAttribute(c,b.dataset.src),await{then:n=>d.onload=()=>n(d)},b.setAttribute(c,d.getAttribute(c))}return a.removeAttribute("data-src"),b.removeAttribute("data-src"),e.forEach(d=>{d.dataset.src&&(d.setAttribute(c,d.dataset.src),d.removeAttribute("data-src"))}),a.classList.add("img-progressive"),a.dataset.alt&&(a.setAttribute("alt",a.dataset.alt),a.removeAttribute("data-alt")),!0}}}
